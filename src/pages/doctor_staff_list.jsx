import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
const API_URL = process.env.REACT_APP_API_URL;

export default function DoctorList() {
  const [doctors, setDoctors] = useState([]);
  const [staff, setStaff] = useState([]);
  const [selectedType, setSelectedType] = useState('doctors');
  const navigate = useNavigate();
  const token = localStorage.getItem('token');

  useEffect(() => {
    const fetchDoctors = async () => {
      try {
        const res = await fetch(`${API_URL}/doctors`, {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        });
        const data = await res.json();
        setDoctors(data);
      } catch (error) {
        console.error('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
      }
    };

    const fetchStaff = async () => {
      try {
        const res = await fetch(`${API_URL}/staff`, {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        });
        const data = await res.json();
        setStaff(data);
      } catch (error) {
        console.error('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
      }
    };

    fetchDoctors();
    fetchStaff();
  }, [token]);

  return (
    <div>
      <div style={{ display: 'flex', alignItems: 'center' }}>
        <h1>üìã ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h1>
        <button
          onClick={() => navigate('/dashboard/staff')}
          style={{
            marginLeft: '1rem',
            border: 'none',
            padding: '0.5rem 1rem',
            borderRadius: '6px',
            cursor: 'pointer',
          }}
        >
          ‚¨ÖÔ∏è ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
        </button>
      </div>

      <div style={{ marginBottom: '1rem' }}>
        <button
          onClick={() => setSelectedType('doctors')}
          style={{ marginRight: '1rem', backgroundColor: selectedType === 'doctors' ? '#2196f3' : '#ccc', color: 'white', padding: '0.5rem 1rem', border: 'none', borderRadius: 6 }}
        >
          ‡∏´‡∏°‡∏≠
        </button>
        <button
          onClick={() => setSelectedType('staff')}
          style={{ backgroundColor: selectedType === 'staff' ? '#2196f3' : '#ccc', color: 'white', padding: '0.5rem 1rem', border: 'none', borderRadius: 6 }}
        >
          ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
        </button>
      </div>

      {selectedType === 'doctors' && (
        <table border="1" cellPadding="8">
          <thead>
            <tr>
              <th>‡∏£‡∏´‡∏±‡∏™</th>
              <th>‡∏ä‡∏∑‡πà‡∏≠</th>
              <th>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô</th>
              <th>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</th>
              <th>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏ß‡∏¥‡∏ä‡∏≤‡∏ä‡∏µ‡∏û</th>
              <th>‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</th>
              <th>‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</th>
            </tr>
          </thead>
          <tbody>
            {doctors.map((doctor) => (
              <tr key={doctor.id}>
                <td>{doctor.id}</td>
                <td>{doctor.first_name} {doctor.last_name}</td>
                <td>{doctor.nickname || '-'}</td>
                <td>{doctor.telephone || '-'}</td>
                <td>{doctor.license_number || '-'}</td>
                <td>{doctor.cid || '-'}</td>
                <td>{doctor.birth_day ? new Date(doctor.birth_day).toLocaleDateString('th-Th') : '-'}</td>
              </tr>
            ))}
          </tbody>
        </table>
      )}

      {selectedType === 'staff' && (
        <table border="1" cellPadding="8">
          <thead>
            <tr>
              <th>‡∏£‡∏´‡∏±‡∏™</th>
              <th>‡∏ä‡∏∑‡πà‡∏≠</th>
              <th>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô</th>
              <th>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</th>
              <th>‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</th>
              <th>‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</th>
              <th>‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó</th>
            </tr>
          </thead>
          <tbody>
            {staff.map((staff) => (
              <tr key={staff.id}>
                <td>{staff.id}</td>
                <td>{staff.first_name} {staff.last_name}</td>
                <td>{staff.nickname || '-'}</td>
                <td>{staff.telephone || '-'}</td>
                <td>{staff.cid || '-'}</td>
                <td>{staff.birth_day ? new Date(staff.birth_day).toLocaleDateString('th-Th') : '-'}</td>
                <td>{staff.role || '-'}</td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
}
